const chalk = require("chalk");
const fs = require("fs");
const path = require("path");

const packageJsonTemplate = pkg => {
  const npgVersion = require("../package.json").version;
  console.log(pkg);
  const packageJson = {
    name: pkg.name,
    version: "0.1.0",
    description: "Package created with NPG (Node Package Generator)",
    main: "dist/index.js",
    scripts: {
      build: "npg build",
      start: "npg start"
    },
    dependencies: {
      npg: npgVersion
    }
  };
  return JSON.stringify(packageJson, null, "  ") + "\n";
};

const indexJsTemplate = () => {
  return `// Your code goes here...
`;
};

const create = packageName => {
  const directoryName = packageName || ".";
  if (!packageName) {
    packageName = path.basename(process.cwd());
  }
  // If name was passed then create directory otherwise initialize package in
  // the current directory.
  if (directoryName !== ".") {
    // Stop if a directory already exists.
    if (fs.existsSync(directoryName)) {
      console.log(chalk.red(`The "${directoryName}" directory already exists`));
      process.exit(1);
    }
    // Create a new directory.
    console.log("Creating package directory...");
    fs.mkdirSync(directoryName);
  }
  // Create package.json file.
  console.log("Creating package.json file...");
  fs.writeFileSync(
    `${directoryName}/package.json`,
    packageJsonTemplate({ name: packageName })
  );
  console.log('Creating "index.js" file...');
  const indexIsPath = `${directoryName}/index.js`;
  // if (fs.existsSync(indexIsPath)) {
    fs.writeFileSync(indexIsPath, indexJsTemplate());
  }
};

module.exports = create;
