const { spawn } = require("child_process");
const chalk = require("chalk");
const path = require("path");
const paths = require("./paths");

const babel = function(options) {
  // Compose link to the "babel" shell script.
  const command = `${paths.bin}/babel`;
  // Prepare presents argument.
  const presets = [paths.presets.env].concat(options.presets || []);
  // Prepare plugins argument.
  const plugins = [
    paths.plugins.proposalClassProperties,
    paths.plugins.proposalObjectRestSpread
  ].concat(options.plugins || []);
  // Prepare ignore argument.
  const ignore = [paths.dist, paths.tests];
  // Extend default arguments with provided ones.
  const args = [
    paths.src,
    `--out-dir=${paths.dist}`,
    `--presets=${presets.join(",")}`,
    `--plugins=${plugins.join(",")}`,
    `--ignore=${ignore.join(",")}`
  ];
  // Run the "babel" command with arguments.
  const child = spawn(command, args);
  child.stdout.on("data", chunk => {
    console.log(chunk.toString("utf8").trim());
  });
  child.stderr.on("data", chunk => {
    console.log(chalk.red(chunk.toString("utf8").trim()));
  });
};

module.exports = babel;
